<Component name="Home">

<TableOfContents/>

    <Markdown>
    <![CDATA[
# Learn XMLUI

XMLUI is a framework for building UIs declaratively with XML markup and flexible theming. Here's the markup for the simplest XMLUI app.

## Hello World

```xml
<App>
  <Text>Hello World!</Text>
</App>
```

The <a href="https://xmlui-docs.azurewebsites.net/components/Text/" target="_blank">Text</a> component does what you'd expect. Here it is running live in this page:

    ]]>
    </Markdown>

    <Text inspect="true">Hello World!</Text>

    <Markdown>
    <![CDATA[
Hmm. The previous paragraph just looks like plain inline text. How can you tell it's a live XMLUI component?

> [!INFO]
> If you hover over an XMLUI component and a button appears,  you can click it to view the component's markup.

Try that on the "Hello World!" paragraph above.

<details>
  <summary>Didn't find the button? Click for a hint. </summary>
  <video autoplay loop muted>
    <source src="resources/inspect-text.mp4"/>
  </video>
</details>
    ]]>
    </Markdown>

    <Markdown>
    <![CDATA[
## Working with live data

Let's try something more interesting. XMLUI components can retrieve and display live data. Here's the current status of London's tube lines:
    ]]>
    </Markdown>

    <List inspect="true" data="https://api.tfl.gov.uk/line/mode/tube/status">
        <Text>{$item.name}: {$item.lineStatuses[0].statusSeverityDescription}</Text>
    </List>


    <Markdown>
    <![CDATA[
## The List component

You could hover over the above <a href="https://xmlui-docs.azurewebsites.net/components/List" target="blank">List</a> to see the markup but it's very concise so we'll show it here.

```
<List data="https://api.tfl.gov.uk/line/mode/tube/status">
  <Text>{$item.name}: {$item.lineStatuses[0].statusSeverityDescription}</Text>
</List>
```


The `List` component receives data by way of the `data` attribute which, in this case, just fetches JSON from a <a href="https://api.tfl.gov.uk/line/mode/tube/status" target="_blank">REST endpoint</a>. Other components, like <a href="https://xmlui-docs.azurewebsites.net/components/Table" target="blank">Table</a>, use the `data` attribute the same way.

<details>
<summary>See a sample of the data.</summary>
<pre>
[
    {
        "name": "Bakerloo",
        "lineStatuses": [
            {
                "statusSeverityDescription": "Good Service"
            }
        ]
    },
    {
    ... etc ...
    },
 ]
</pre>
</details>

 We've seen `Text` as a standalone component. Here, nested within `List`, it renders once for each item in the list. The standard XMLUI variable `$item` holds each successive JSON object. It's a JavaScript variable, so you can use dot notation and array indexing to extract values.

    ]]>
    </Markdown>

</Component>